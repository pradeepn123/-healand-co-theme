{%- liquid
  assign options = section.settings
  assign container_size = options.container_size

  assign desktop_columns = options.desktop_columns
  assign laptop_columns = desktop_columns | minus: 1
  assign tablet_columns = desktop_columns | minus: 2
  assign desktop_carousel_percent_width = 100.0
  assign laptop_carousel_percent_width = 100.0
  assign tablet_carousel_percent_width = 100.0

  assign title = options.title
  assign heading_size = options.heading_size
  assign alignment = options.alignment
  assign section_spacing_top = options.section_spacing_top
  assign section_spacing_bottom = options.section_spacing_bottom
  
  assign desktop_space_between_cards = options.desktop_space_between_cards
  assign mobile_space_between_cards = options.mobile_space_between_cards
  
  assign placeholder_count = desktop_columns | times: 2
  assign collection_list = options.collection_list | default: (1..placeholder_count)

  assign section_layout = options.section_layout
  assign show_navigation_on_hover = options.show_navigation_on_hover
  assign keymetadata = product.metafields.custom.key_ingredients.value 

  if section_layout == 'carousel-overflow'
    assign half_desktop_slide_width = desktop_carousel_percent_width | divided_by: desktop_columns | times: 0.33
    assign half_laptop_slide_width = laptop_carousel_percent_width | divided_by: laptop_columns | times: 0.33
    assign half_tablet_slide_width = tablet_carousel_percent_width | divided_by: tablet_columns | times: 0.33

    assign desktop_carousel_percent_width = desktop_carousel_percent_width | minus: half_desktop_slide_width
    assign laptop_carousel_percent_width = laptop_carousel_percent_width | minus: half_laptop_slide_width
    assign tablet_carousel_percent_width = tablet_carousel_percent_width | minus: half_tablet_slide_width
  endif

  assign colorsMetafield = product.metafields.custom.color_schema.value

-%}
{% capture css %}
  {% style %}
  @media screen and (max-width: 480px){
    .single_key_ingredients_main .main_title_key h4{
      font-size: {{ section.settings.mobile_title_size }}px !important;
    }
  }
    .section-{{ section.id }} {
        --gsc-space-between-cards: {{ mobile_space_between_cards }}px;
        --gsc-slide-width: {{ desktop_carousel_percent_width | times: 1.00 | divided_by: desktop_columns }}%;
        --gsc-columns: 1;
        --gsc-section-spacing-top: {{ section_spacing_top }}px;
        --gsc-section-spacing-bottom: {{ section_spacing_bottom }}px;
    }
    @media(max-width:767px){
        .section-{{ section.id}} .card-carousel__position-btn-wrap, 
        .section-{{ section.id}} .card-carousel__slide{
            min-width:100%;
        }
    }
    @media {% render 'media-queries', screen: 'md' %} {
        .section-{{ section.id }} {
            --gsc-space-between-cards: {{ desktop_space_between_cards }}px;
            --gsc-columns: {{ desktop_columns }};
        }
    }

    {% if desktop_columns == 3 %}
      @media screen and (min-width: 768px) and (max-width: 1016px) {
        .section-{{ section.id }} {
          --gsc-slide-width: {{ laptop_carousel_percent_width | times: 1.00 | divided_by: laptop_columns }}%;
        }
      }
    {% endif %}

    {% if desktop_columns > 3 %}
      @media screen and (min-width: 880px) and (max-width: 1016px) {
        .section-{{ section.id }} {
          --gsc-slide-width: {{ laptop_carousel_percent_width | times: 1.00 | divided_by: laptop_columns }}%;
        }
      }
      @media screen and (min-width: 768px) and (max-width: 880px) {
        .section-{{ section.id }} {
          --gsc-slide-width: {{ tablet_carousel_percent_width | times: 1.00 | divided_by: tablet_columns }}%;
        }
      }
    {% endif %}

    @media(min-width:1200px){
      {% if  keymetadata.count == 1 %}
        .section-{{ section.id }} .card-carousel__slide{
          width: var(--gsc-slide-width)!important;
        }
      {% endif %}
    }

    {% if  keymetadata.count == 1 %}
      .key_ingredient_section .card-carousel__viewport .card-carousel__container{
        justify-content: center;
      }
    {% endif %}
    
    {% if colorsMetafield %}
        .ingredients_wrapper{
            background: var(--meta-background-color);
            color: var(--meta-text-color);
        }
        .key_ingredient_section .main_title_key .carousel-btn{
            background: var(--meta-background-color);
            color: var(--meta-text-color);
        }
    {% endif %}

  {% endstyle %}
{% endcapture %}

{% render 'inline-css-minifier', css: css %}

{{ 'key-ingredients.css' | asset_url | stylesheet_tag }}

{% if keymetadata != blank %}
    <div class="section-{{ section.id }} single_key_ingredients_main">
        <div class="container container--{{ container_size }} section-spacing">
            
            <carousel-component class="card-carousel key-ingredients
                {% if show_navigation_on_hover %}card-carousel--navigation-on-hover{%else%}{% endif %}
                {% if section_layout == 'carousel-overflow' %} card-carousel--with-half-next-slide{% endif %} 
                {% if section_layout == 'carousel-overflow' and show_navigation_on_hover %} card-carousel--with-half-next-slide-and-hover-navigation{% endif %}"
                data-section-id='{{ section.id }}'>
                
                
                <div class="main_title_key {% if alignment == 'center' %}key-list__header--center{% endif %}" data-aos="fade-up">
                    <carousel-btn
                        class='carousel-btn card-carousel__carousel-btn card-carousel__carousel-btn--prev'
                        data-scroll-direction='prev'
                        tabindex='0'
                    >
                        {%- render 'icon', icon_name: 'chevron', class: 'carousel-btn__icon x-flip' -%}
                    </carousel-btn>
                    <h4 class="{{ heading_size }}">{{ title }}</h4>
                    <carousel-btn
                        class='carousel-btn card-carousel__carousel-btn card-carousel__carousel-btn--next'
                        data-scroll-direction='next'
                        tabindex='0'
                    >
                        {%- render 'icon', icon_name: 'chevron', class: 'carousel-btn__icon' -%}
                    </carousel-btn>
                </div>
                <div class="card-carousel__viewport 
                {% if section_layout == 'carousel-overflow' %} card-carousel__viewport--overflow{% endif %}" data-carousel-viewport>
                    <div class='card-carousel__container announcement__carousel-container' data-carousel-container>
                        {% for item in keymetadata %}
{%- comment -%} Wholesale_Club_Product_Visibility_For_Loop Start {%- endcomment -%}
{%- capture hide_resource -%}{% render "wc_product_visibility", resource: item %}{%- endcapture -%}
{%- if hide_resource == "true" -%}
  {% continue %}
{%- endif -%}
{%- comment -%} Wholesale_Club_Product_Visibility_For_Loop End {%- endcomment -%}

{% comment %} Wholesale_Club_Item_Prices Start {% endcomment %}
{% if item.product %}{% assign base_product = item.product %}{% else %}{% assign base_product = item %}{% endif %}
{% if item.variant %}{% assign base_variant = item.variant %}{% else %}{% assign base_variant = item.selected_or_first_available_variant %}{% endif %}

{% if shop.metafields.sawholesale['base_price'] == blank %}
  {% assign base_price = 'compare_at_price' %}
{% else %}
  {% assign base_price = shop.metafields.sawholesale['base_price'] %}
{% endif %}

{% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

{% if customer.tags != blank %}
  {% for mf in base_product.metafields.sawholesale %}
{%- comment -%} Wholesale_Club_Product_Visibility_For_Loop Start {%- endcomment -%}
{%- capture hide_resource -%}{% render "wc_product_visibility", resource: mf %}{%- endcapture -%}
{%- if hide_resource == "true" -%}
  {% continue %}
{%- endif -%}
{%- comment -%} Wholesale_Club_Product_Visibility_For_Loop End {%- endcomment -%}

    {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
    {% if customer.tags contains product_customer_tag %}
      {% assign saw_has_discount = true %}
      {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
      {% assign price_key = product_customer_tag | prepend: 'price_' %}
      {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
    {% endif %}
  {% endfor %}
{% endif %}

{% assign saw_discount = 1 | minus: saw_discount %}

{% if base_price == 'price' or base_variant.compare_at_price == blank  or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
  {% assign saw_variant_compare_at_price = base_variant.price %}
{% else %}
  {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
{% endif %}

{% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
{% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
  {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
{% else %}
  {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
{% endif %}

{% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
  {% assign WCItem_OriginalPrice = item.original_price %}
  {% assign WCItem_FinalPrice = item.final_price %}
  {% assign WCItem_Price = item.price %}
  {% assign WCItem_PriceMin = item.price_min %}
  {% assign WCItem_PriceMax = item.price_max %}
  {% assign WCItem_CompareAtPrice = item.compare_at_price %}
  {% assign WCItem_CompareAtPriceMin = item.compare_at_price_min %}
  {% assign WCItem_CompareAtPriceMax = item.compare_at_price_max %}
  {% assign WCItem_OriginalLinePrice = item.original_line_price %}
  {% assign WCItem_FinalLinePrice = item.final_line_price %}
  {% assign WCItem_LinePrice = item.line_price %}
{% else %}
  {% assign WCItem_OriginalPrice = saw_variant_compare_at_price %}
  {% assign WCItem_FinalPrice = saw_variant_price %}
  {% assign WCItem_Price = saw_variant_price %}
  {% assign WCItem_PriceMin = item.price_min | times: saw_discount %}
  {% assign WCItem_PriceMax = item.price_max | times: saw_discount %}
  {% assign WCItem_CompareAtPrice = saw_variant_compare_at_price %}
  {% if base_product.compare_at_price_min != 0 %}{% assign WCItem_CompareAtPriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCItem_CompareAtPriceMin = base_product.price_min %}{% endif %}
  {% if base_product.compare_at_price_max != 0 %}{% assign WCItem_CompareAtPriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCItem_CompareAtPriceMax = base_product.price_max %}{% endif %}
  {% assign WCItem_OriginalLinePrice = WCItem_OriginalPrice | round | times: item.quantity %}
  {% assign WCItem_FinalLinePrice = WCItem_FinalPrice | round | times: item.quantity %}
  {% assign WCItem_LinePrice = WCItem_Price | round | times: item.quantity %}
{% endif %}
{% comment %} Wholesale_Club_Item_Prices End {% endcomment %}

                            <div class='card-carousel__slide' data-aos="fade-up">
                                {% render 'key-ingredients', item: item %}
                            </div>
                        {% endfor %}
                    </div>
                </div>
                
            </carousel-component>
        </div>
    </div>
{% endif %}



{% schema %}
{
  "name": "Key Ingredients",
  "tag": "section",
  "class": "key_ingredient_section",
  "settings": [
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "default",
          "label": "t:sections.general_section_settings.color_scheme_option_default_label"
        },
        {
          "value": "primary",
          "label": "t:sections.general_section_settings.color_scheme_option_primary_label"
        },
        {
          "value": "secondary",
          "label": "t:sections.general_section_settings.color_scheme_option_secondary_label"
        },
        {
          "value": "custom-1",
          "label": "t:sections.general_section_settings.color_scheme_option_custom_1_label"
        },
        {
          "value": "custom-2",
          "label": "t:sections.general_section_settings.color_scheme_option_custom_2_label"
        },
        {
          "value": "custom-3",
          "label": "t:sections.general_section_settings.color_scheme_option_custom_3_label"
        }
      ],
      "default": "default",
      "label": "t:sections.general_section_settings.color_scheme_label",
      "info": "t:sections.general_section_settings.color_scheme_tip"
    },
    {
      "type": "select",
      "id": "container_size",
      "options": [
        {
          "value": "page-width",
          "label": "t:sections.general_section_settings.container_size.page_width_option"
        },
        {
          "value": "large",
          "label": "t:sections.general_section_settings.container_size.large_width_option"
        },
        {
          "value": "medium",
          "label": "t:sections.general_section_settings.container_size.medium_width_option"
        }
      ],
      "default": "page-width",
      "label": "t:sections.general_section_settings.container_size.label"
    },
    {
      "type": "range",
      "id": "section_spacing_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 48,
      "unit": "t:sections.general_section_settings.section_spacing_top.unit",
      "label": "t:sections.general_section_settings.section_spacing_top.label"
    },
    {
      "type": "range",
      "id": "section_spacing_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 48,
      "unit": "t:sections.general_section_settings.section_spacing_bottom.unit",
      "label": "t:sections.general_section_settings.section_spacing_bottom.label"
    },
    {
      "type": "select",
      "id": "section_layout",
      "options": [        
        {
          "value": "carousel",
          "label": "t:sections.collection_list.section_layout.carousel_label"
        },
        {
          "value": "carousel-overflow",
          "label": "t:sections.collection_list.section_layout.carousel_overflow_label"
        }
      ],
      "default": "carousel-overflow",
      "label": "t:sections.collection_list.section_layout.label"
    },
    {
      "type": "header",
      "content": "Ingredients Heading"
    },
    {
      "type": "text",
      "id": "title",
      "default": "Key Ingredients",
      "label": "t:sections.collection_list.title_label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "label": "t:sections.general_section_settings.label_for_heading_size_setting",
      "options": [
        {
          "value": "h0",
          "label": "t:sections.general_section_settings.heading_size_0_option"
        },
        {
          "value": "h1",
          "label": "t:sections.general_section_settings.heading_size_1_option"
        },
        {
          "value": "h2",
          "label": "t:sections.general_section_settings.heading_size_2_option"
        },
        {
          "value": "h3",
          "label": "t:sections.general_section_settings.heading_size_3_option"
        },
        {
          "value": "h4",
          "label": "t:sections.general_section_settings.heading_size_4_option"
        },
        {
          "value": "h5",
          "label": "t:sections.general_section_settings.heading_size_5_option"
        },
        {
          "value": "h6",
          "label": "t:sections.general_section_settings.heading_size_6_option"
        },
        {
          "value": "h7",
          "label": "t:sections.general_section_settings.heading_size_7_option"
        }
      ],
      "default": "h5"
    },
    {
      "type": "range",
      "id": "mobile_title_size",
      "min": 0,
      "max": 50,
      "step": 1,
      "default": 24,
      "unit": "px",
      "label": "Mobile Heading Font Size"
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "t:sections.general_section_settings.heading_alignment_label",
      "options": [
        {
          "value": "left",
          "label": "t:sections.general_section_settings.alignment_option_left_label"
        },
        {
          "value": "center",
          "label": "t:sections.general_section_settings.alignment_option_center_label"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "t:sections.collection_list.cards_settings_header"
    },
    {
      "type": "range",
      "id": "desktop_columns",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.collection_list.desktop_columns_label"
    },
    {
      "type": "range",
      "id": "desktop_space_between_cards",
      "min": 0,
      "max": 32,
      "step": 1,
      "default": 16,
      "unit": "t:sections.collection_list.desktop_space_between_cards_unit",
      "label": "t:sections.collection_list.desktop_space_between_cards_label"
    },
    {
      "type": "range",
      "id": "mobile_space_between_cards",
      "min": 0,
      "max": 32,
      "step": 1,
      "default": 16,
      "unit": "t:sections.collection_list.mobile_space_between_cards_unit",
      "label": "t:sections.collection_list.mobile_space_between_cards_label"
    },
    {
      "type": "checkbox",
      "id": "enable_carousel_on_mobile",
      "default": false,
      "label": "t:sections.collection_list.enable_carousel_on_mobile.label",
      "info": "t:sections.collection_list.enable_carousel_on_mobile.info"
    },
    {
      "type": "header",
      "content": "t:sections.product_recommendations.carousel_settings_header"
    },
    {
      "type": "checkbox",
      "id": "show_navigation_on_hover",
      "default": true,
      "label": "t:sections.product_recommendations.show_navigation_on_hover_label"
    }
  ],
  "presets": [
    {
      "name": "Key Ingredients"
    }
  ]
}
{% endschema %}
